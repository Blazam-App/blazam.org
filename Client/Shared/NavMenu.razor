@{

}
<MudPaper Width="180px" Style="height:100%" Elevation="0" Class="py-3 mud-theme-dark">
   


    <MudNavMenu Style="height:100%">

        <MudStack Style="height:100%">
            <MudStack Row=true>
                <MudImage Class="app-icon" Src="/img/default_logo.png" />

                <MudText Align="Align.Center" Class="align-middle">Blazam</MudText>

            </MudStack>
            <MudNavLink Icon="@Icons.Material.Filled.Dashboard"
                        OnClick=@(()=>{Layout.CurrentPage=AppPage.Index;})>
                @AppLocalization["Home"]
            </MudNavLink>

            <MudNavLink Icon=@Icons.Material.Filled.List
                        OnClick=@(()=>{
                        Layout.CurrentPage=AppPage.Features;
                        })>
                @AppLocalization["Features"]
            </MudNavLink>

            <MudNavLink Icon=@Icons.Material.Filled.Gamepad
                        OnClick=@(()=>{Layout.CurrentPage=AppPage.Demo;})>
                @AppLocalization["Demo"]
            </MudNavLink>

            <MudNavLink Icon=@Icons.Material.Filled.Download
                        OnClick=@(()=>{Layout.CurrentPage=AppPage.Download;})>

                @AppLocalization["Download"]
            </MudNavLink>


            <MudNavLink Icon=@Icons.Material.Filled.Book
                        Href="https://docs.blazam.org"
                        Target="Target.Blank">

                @AppLocalization["Documentation"]
            </MudNavLink>









            <MudSpacer />

            <MudNavLink Icon=@Icons.Custom.Brands.GitHub Target="Target.Blank" Href="https://github.com/Blazam-App/BLAZAM">
                GitHub
            </MudNavLink>

            <MudNavLink Icon=@Icons.Material.Filled.Code Target="Target.Blank" Href="https://github.com/Blazam-App/blazam.org">
                Blazam.org Source Code
            </MudNavLink>

        </MudStack>
    </MudNavMenu>
</MudPaper>
@code {
    public enum AppPage { Index, Features, Demo, Download, ManualInstall, MSIInstall };
    [CascadingParameter]
    public MainLayout Layout { get; set; }

    private bool collapseNavMenu = true;
    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;
    public int ScreenHeight { get; set; }
    public int ScreenWidth { get; set; }
    protected override async Task OnInitializedAsync()
    {
        base.OnInitializedAsync();

        var dimension = await JSRuntime.InvokeAsync<WindowDimension>("getWindowDimensions");
        ScreenHeight = dimension.Height;
        ScreenWidth = dimension.Width;

        InvokeAsync(StateHasChanged);


    }

    public class WindowDimension
    {
        public int Width { get; set; }
        public int Height { get; set; }
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    }
